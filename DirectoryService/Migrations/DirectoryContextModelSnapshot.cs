// <auto-generated />
using System;
using DirectoryService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DirectoryService.Migrations
{
    [DbContext(typeof(DirectoryContext))]
    partial class DirectoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DirectoryService.Models.CommunicationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ConnectionType")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<Guid>("Person_UUID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Person_UUID");

                    b.ToTable("CommunicationInfo", (string)null);
                });

            modelBuilder.Entity("DirectoryService.Models.Person", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("UUID");

                    b.ToTable("Person", (string)null);
                });

            modelBuilder.Entity("DirectoryService.Models.CommunicationInfo", b =>
                {
                    b.HasOne("DirectoryService.Models.Person", "Person")
                        .WithMany("CommunicationInfos")
                        .HasForeignKey("Person_UUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("DirectoryService.Models.Person", b =>
                {
                    b.Navigation("CommunicationInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
